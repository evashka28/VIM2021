# -*- coding: utf-8 -*-
"""lab3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UymE_om89CKih_FQ1SR0DkI1gXFc_wgH
"""

import pandas as pd

df = pd.read_csv("k-pop_group.csv")
df.head()

df_norm = df.copy()

"""# **Проблемы данных**

Название | Описание | Формат | Шкала | Проблема | Решение
--- | --- | --- | --- | --- | ---
Name | название группы | str | номинальная | - | -
Gender | пол участников | str | номинальная | текст неудобно использовать при построении модели | перевод в число
Korean name | название группы на корейском | str | номинальная | - | -
Debut | дата дебюта | str | относительная | даты считаются как строка  | перевод в число
Company | комания группы | str | номинальная | - | -
Members | количество участников в группе | int | Относительнаяя | - | -
Orig. Memb. | планируемое количество участников | int | Относительнаяя | - | - 
Fanclub name | название фанатской базы | str | номинальная | - | -
Active | активна ли группа на данный момент | str | номинальная | текст неудобно использовать при построении модели | перевод в число 
Disband | дата расформирования | str | относительная | даты считаются как строка  | перевод в число

# **Gender**
"""

df_norm["Gender"].unique()

"""Присвоим числовое значение каждому полу.

Значение | Сокращение | Число
::--- | :---: | :---:
Male | M | 0
Female | F | 1
"""

def norm_gender(gen: str) -> int:
  if gen == "M":
    return 0
  else:
    return 1

df_norm["Gender"] = df_norm["Gender"].apply(norm_gender)
df_norm.head()

"""проверка работы"""

df_norm["Gender"].unique()

"""# **Active**"""

df_norm["Active"].unique()

"""Присвоим числовое значение активности.

- | Значение | Число
::--- | :---: | :---:
Active | No | 0
  | Yes | 1
  | Hiatus| 0
"""

def norm_active(act: str) -> int:
  if act == "Yes":
    return 1
  else:
    return 0

df_norm["Active"] = df_norm["Active"].apply(norm_active)
df_norm.head()

"""проверка работы"""

df_norm["Active"].unique()

"""# **Debut**

Оставим в датах только год.
"""

def norm_debut(deb: str) -> int:
  if type(deb) == str and deb !="-":
    return int(deb[6:])

df_norm["Debut"] = df_norm["Debut"].apply(norm_debut)
df_norm.head()

"""Проверим, не осталось ли неправильных значений"""

df_norm["Debut"].unique()

"""# **Disband**

Оставим в датах только год.
 Если написана дата, то группа распалась.
Если написано "1", то группа активна.
"""

def norm_disband(dis: str) -> int:
  if dis !="0":
    return int(dis[6:])
  else:
    return 1

df_norm["disband"] = df_norm["disband"].apply(norm_disband)
df_norm.head()

df_norm["disband"].unique()

"""# Удаление

Заметим, что столбец disband и Active по смыслу повторяют друг друга. Удалим столбец Active
"""

df_norm = df_norm.drop(columns=["Active"])

df_norm.head()

"""# Проверка на ошибочные данные"""

df_norm["Fanclub Name"].unique()

df_norm["Korean Name"].unique()

df_norm["Name"].unique()

df_norm["Company"].unique()

df_norm["Members"].unique()

df_norm["Orig. Memb."].unique()

"""Все данные верны, всё в порядке."""